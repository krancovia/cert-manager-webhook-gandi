name: Release

on:
  release:
    types: 
    - created

jobs:

  publish-image:
    permissions:
      packages: write # Used to push images to `ghcr.io`
      id-token: write # Needed to create a token for keyless signing
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.image.outputs.digest }}
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
    - name: Install Cosign
      uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0
      with:
        cosign-release: 'v2.2.1' # optional
    - name: Login to GHCR
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/krancovia/cert-manager-webhook-gandi
        flavor: latest=false
        tags: type=semver,pattern={{raw}}
    - name: Build and push
      id: image
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        build-args: |
          VERSION=${{ github.ref_name }}
          GIT_COMMIT=${{ github.sha }}
          GIT_TREE_STATE=clean
        tags: ${{ steps.meta.outputs.tags }}
        push: true
        provenance: false
        sbom: false
    - name: Sign image
      run: |
          cosign sign \
          -a "repo=${{ github.repository }}" \
          -a "workflow=${{ github.workflow }}" \
          -a "sha=${{ github.sha }}" \
          --yes \
          ghcr.io/krancovia/cert-manager-webhook-gandi@${{ steps.image.outputs.digest}}
    - name: Publish SBOM
      uses: anchore/sbom-action@v0
      with:
        image: ${{ steps.meta.outputs.tags }}

  image-provenance:
    needs:
    - publish-image
    permissions:
      actions: read # for detecting the Github Actions environment
      id-token: write # for creating tokens for signing
      packages: write # for uploading attestations
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.0.0
    with:
      image: ${{ needs.publish-image.outputs.repo }}
      digest: ${{ needs.publish-image.outputs.image-digest }}
    secrets:
      registry-username: ${{ github.actor }}
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  publish-chart:
    needs: publish-image
    runs-on: ubuntu-latest
    steps:
    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.12.3'
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Publish chart
      env:
        HELM_EXPERIMENTAL_OCI: '1'
        CHART_REPO: ghcr.io/krancovia/charts
        VERSION: ${{ github.ref_name }}
      run: |
        CHART_VERSION=$(echo $VERSION | cut -c 2-)
        cd chart
        helm dep up
        helm package . --version ${CHART_VERSION} --app-version ${VERSION}
        helm push cert-manager-webhook-gandi-${CHART_VERSION}.tgz oci://${CHART_REPO}
